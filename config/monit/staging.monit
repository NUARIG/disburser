set daemon  60
set logfile syslog facility log_daemon
set eventqueue basedir /var/monit slots 1000
set mailserver ns.northwestern.edu
set mail-format { from: monit@enotis-staging.nubic.northwestern.edu }
set alert sysadmin@bioinformatics.northwestern.edu
#set alert enotissupport@northwestern.edu
# Specify the URL for posting events to M/Monit. The authority
# part of the URL, that is, monit:monit, specify a username and
# password registered in M/Monit. If you change the password of
# the Monit user in M/Monit it must be changed here as well.
#set mmonit http://monit:monit@monitor:18080/collector
set httpd port 2812 and use address localhost
#     SSL ENABLE
#     PEMFILE  /etc/pki/tls/certs/enotis-staging.nubic.northwestern.edu.cert
     allow localhost
#     allow monitor
#     allow admin:enotis-staging

check system localhost
   if loadavg (1min) > 8 then alert
   if loadavg (5min) > 4 then alert
   if memory usage > 75% then alert
   if cpu usage (user) > 70% for 8 cycles then alert
   if cpu usage (system) > 30% for 8 cycles then alert
   if cpu usage (wait) > 20% for 8 cycles then alert

check process sshd with pidfile /var/run/sshd.pid
   start program  "/etc/init.d/sshd start"
   stop program  "/etc/init.d/sshd stop"
   if failed port 22 protocol ssh then restart
   if 5 restarts within 5 cycles then timeout

check process apache with pidfile /var/run/httpd.pid
   group www
   start program = "/etc/init.d/httpd start"
   stop program  = "/etc/init.d/httpd stop"
   if failed host enotis-staging.nubic.northwestern.edu port 443 type tcpssl protocol http
      and request "/login" then restart
   if cpu is greater than 60% for 2 cycles then alert
   if cpu > 80% for 5 cycles then restart
   if totalmem > 500 MB for 5 cycles then restart
   if children > 250 then restart
   if loadavg(5min) greater than 10 for 8 cycles then stop
   if 3 restarts within 5 cycles then timeout

check process delayed_job
  with pidfile /var/www/apps/enotis/shared/pids/delayed_job.pid
  start program = "/bin/sh /etc/delayed_job_start.sh"
  stop program = "/bin/sh /etc/delayed_job_stop.sh"

#check process resque_scheduler
#  with pidfile /var/www/apps/enotis/current/tmp/pids/resque_scheduler.pid
#  #PATH=/opt/ruby-enterprise/bin /bin/sh -c 'cd /var/www/apps/enotis/current; RAILS_ENV=staging /usr/local/bin/ruby_for_passenger -S bundle exec rake resque:scheduler'
#  start program = "/bin/sh -c 'cd /var/www/apps/enotis/current; PATH=/opt/ruby-enterprise/bin RAILS_ENV=staging /usr/local/bin/ruby_for_passenger -S rake resque:scheduler  > log/resque_scheduler.log 2>&1 &  echo $! > tmp/pids/resque_scheduler.pid'" as uid blc615 and gid users
#  stop program = "/bin/sh -c 'cd /var/www/apps/enotis/current && kill -s QUIT `cat tmp/pids/resque_scheduler.pid` && rm -f tmp/pids/resque_scheduler.pid; exit 0;'"
#  if 3 restarts within 5 cycles then alert
#  group resque_workers
#
#
#check process resque_study_1 with pidfile "/var/www/apps/enotis/current/tmp/pids/resque_study_1.pid"
#  start program = "/bin/sh -c 'cd /var/www/apps/enotis/current; PATH=/opt/ruby-enterprise/bin RAILS_ENV=staging JOBS_PER_FORK=25 QUEUE=redis_study_populator /usr/local/bin/ruby_for_passenger -S bundle exec rake resque:work > log/resque_study.log 2>&1 & echo $! > tmp/pids/resque_study_1.pid'" as uid blc615 and gid users
#  stop program = "/bin/sh -c 'cd /var/www/apps/enotis/current && kill -s QUIT `cat tmp/pids/resque_study_1.pid` && rm -f tmp/pids/resque_study_1.pid; exit 0;'"
#  if 5 restarts within 5 cycles then alert
#  group resque_workers
#
#check process resque_study_2 with pidfile "/var/www/apps/enotis/current/tmp/pids/resque_study_2.pid"
#  start program = "/bin/sh -c 'cd /var/www/apps/enotis/current; PATH=/opt/ruby-enterprise/bin RAILS_ENV=staging JOBS_PER_FORK=25 QUEUE=redis_study_populator /usr/local/bin/ruby_for_passenger -S bundle exec rake resque:work > log/resque_study.log 2>&1 & echo $! > tmp/pids/resque_study_2.pid'" as uid blc615 and gid users
#  stop program = "/bin/sh -c 'cd /var/www/apps/enotis/current && kill -s QUIT `cat tmp/pids/resque_study_2.pid` && rm -f tmp/pids/resque_study_2.pid; exit 0;'"
#  if 5 restarts within 5 cycles then alert
#  group resque_workers
#
#check process resque_people_1 with pidfile "/var/www/apps/enotis/current/tmp/pids/resque_people_1.pid"
#  start program = "/bin/sh -c 'cd /var/www/apps/enotis/current; PATH=/opt/ruby-enterprise/bin RAILS_ENV=staging JOBS_PER_FORK=25 QUEUE=rake_worker,redis_authorized_personnel_populator,redis_ldapper,redis_bogus_netid,subject_involvement_populator /usr/local/bin/ruby_for_passenger -S bundle exec rake resque:work > log/resque_people.log 2>&1 & echo $! > tmp/pids/resque_people_1.pid'" as uid blc615 and gid users
#  stop program = "/bin/sh -c 'cd /var/www/apps/enotis/current && kill -s QUIT `cat tmp/pids/resque_people_1.pid` && rm -f tmp/pids/resque_people_1.pid; exit 0;'"
#  if 5 restarts within 5 cycles then alert
#  group resque_workers
#
#check process resque_people_2 with pidfile "/var/www/apps/enotis/current/tmp/pids/resque_people_2.pid"
#  start program = "/bin/sh -c 'cd /var/www/apps/enotis/current; PATH=/opt/ruby-enterprise/bin RAILS_ENV=staging JOBS_PER_FORK=25 QUEUE=redis_authorized_personnel_populator,redis_ldapper,redis_bogus_netid,subject_involvement_populator,empi /usr/local/bin/ruby_for_passenger -S bundle exec rake resque:work > log/resque_people.log 2>&1 & echo $! > tmp/pids/resque_people_2.pid'" as uid blc615 and gid users
#  stop program = "/bin/sh -c 'cd /var/www/apps/enotis/current && kill -s QUIT `cat tmp/pids/resque_people_2.pid` && rm -f tmp/pids/resque_people_2.pid; exit 0;'"
#  if 5 restarts within 5 cycles then alert
#  group resque_workers
#

# 2011-6-29: Re-added empi resque worker per qwac request
#check process resque_people_3 with pidfile "/var/www/apps/enotis/current/tmp/pids/resque_people_3.pid"
#  start program = "/bin/sh -c 'cd /var/www/apps/enotis/current; PATH=/opt/ruby-enterprise/bin RAILS_ENV=staging JOBS_PER_FORK=25 QUEUE=empi /usr/local/bin/ruby_for_passenger -S bundle exec rake resque:work > log/resque_people.log 2>&1 & echo $! > tmp/pids/resque_people_3.pid'" as uid blc615 and gid users
#  stop program = "/bin/sh -c 'cd /var/www/apps/enotis/current && kill -s QUIT `cat tmp/pids/resque_people_3.pid` && rm -f tmp/pids/resque_people_3.pid; exit 0;'"
#  if 5 restarts within 5 cycles then alert
#  group resque_workers

#check host q-staging.nubic.northwestern.edu with address 165.124.146.109
#  if failed port 6379
#  send "SET redis_heartbeat 10\r\npulsecheck\r\n"
#  expect "OK"
#  send "EXISTS redis_heartbeat\r\n"
#  expect ":1"
#  send "GET redis_heartbeat\r\n"
#  expect "pulsecheck\r\n"
#  then alert