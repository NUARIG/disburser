- content_for(:title) do
  Admin

#disburser_requests
  .disburser_requests_header
    %h4
      Admin
    = form_tag admin_disburser_requests_url, method: 'get', id: 'search_disburser_requests_form'  do
      .repository{ class: 'large-4 columns' }
        %label{for: 'repository_id' }
          Repository
        = select_tag :repository_id, options_for_select(@repositories.map { |repository| [repository.name, repository.id] }, (params[:repository_id].blank? ? '' : params[:repository_id])), { include_blank: 'all', class: 'repository '}
      .status{ class: 'large-4 columns' }
        %label{for: 'status' }
          Status
        = select_tag :status, options_for_select(DisburserRequest::DISBURSER_REQUEST_STATUSES_SANS_DRAFT.map { |status| [status, status] }, (params[:status].blank? ? '' : params[:status])), { include_blank: 'all', class: 'status'}
      .data_status{ class: 'large-4 columns' }
        %label{for: 'data_status' }
          Data Status
        = select_tag :data_status, options_for_select(DisburserRequest::DISBURSER_REQUEST_DATA_STATUSES.map { |status| [status, status] }, (params[:data_status].blank? ? '' : params[:data_status])), { include_blank: 'all', class: 'data_status'}
      .specimen_status{ class: 'large-4 columns' }
        %label{for: 'specimen_status' }
          Specimen Status
        = select_tag :specimen_status, options_for_select(DisburserRequest::DISBURSER_REQUEST_SPECIMEN_STATUSES.map { |status| [status, status] }, (params[:specimen_status].blank? ? '' : params[:specimen_status])), { include_blank: 'all', class: 'specimen_status'}
      .feasibility{ class: 'large-2 columns' }
        %label{for: 'feasibility' }
          Feasibility
        = select_tag :feasibility, options_for_select([['yes', 'yes'],['no', 'no']], (params[:feasibility].blank? ? '' : params[:feasibility])), { include_blank: 'all', class: 'status'}
      .search_box{ class: 'large-3 columns' }
        %label{for: 'search' }
          Search
        = text_field_tag :search, (params[:search].nil? ? '' : params[:search]), type: 'search'
      .search_buttons{ class: 'large-3 columns' }
        %button{ type: 'submit', id: 'search_disburser_requests_button', class: 'tiny button' }
          Search
        = link_to 'Clear', admin_disburser_requests_url
  .disburser_requests_list
    = will_paginate @disburser_requests, renderer: FoundationPagination::Rails
    %table.hack_stack
      %thead
        %tr
          %th.repository
            = sortable 'repositories.name', 'Repository'
          %th.title
            = sortable 'title'
          %th.submitter
            = sortable 'users.last_name', 'Submitter'
          %th.investigator
            = sortable 'investigator'
          %th.irb_number
            = sortable 'irb_number', 'IRB Number'
          %th.feasibility
            = sortable 'feasibility'
          %th.status
            = sortable 'status'
          %th.data_status
            = sortable 'data_status', 'Data Status'
          %th.specimen_status
            = sortable 'specimen_status', 'Specimen Status'
          %th.approve
            Approve
          %th.deny
            Deny
          %th.edit{ width: 100 }
      %tbody
        - @disburser_requests.each do |disburser_request|
          = content_tag_for(:tr, disburser_request) do
            %td.repository
              = disburser_request.repository.name
            %td.title
              = disburser_request.title
            %td.submitter
              = disburser_request.submitter.full_name
            %td.investigator
              = disburser_request.investigator
            %td.irb_number
              = disburser_request.irb_number
            %td.feasibility
              = human_boolean(disburser_request.feasibility)
            %td.status
              = disburser_request.status
            %td.data_status
              = disburser_request.data_status
            %td.specimen_status
              = disburser_request.specimen_status
            %td.approve
              = disburser_request.disburser_request_votes.by_vote(DisburserRequestVote::DISBURSER_REQUEST_VOTE_TYPE_APPROVE).count
            %td.deny
              = disburser_request.disburser_request_votes.by_vote(DisburserRequestVote::DISBURSER_REQUEST_VOTE_TYPE_DENY).count
            %td.edit
              = link_to 'Edit', edit_admin_status_disburser_request_url(disburser_request), { class: 'edit_admin_status_disburser_request_link' }
    = will_paginate @disburser_requests, renderer: FoundationPagination::Rails